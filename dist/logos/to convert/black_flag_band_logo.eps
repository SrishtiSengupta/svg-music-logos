%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 215 337 391 504 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: BLACK_FLAG_LOGO.eps
%%CreationDate: Mon Nov 20 16:31:52 2006
%%For: Carlo
%%DocumentProcessColors: 
%%DocumentCustomColors: (Nero Corel)
%%CMYKCustomColor: 0 0 0 1 (Nero Corel)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Versione 13.0.0.667
%Color profile: Disattivato
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 280 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
236.90750 355.80472 358.36753 486.08504 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 (Nero Corel) ] set_fill_color
241.60167 468.11197 m
241.60167 481.55811 l
241.60167 481.91329 241.59515 482.25231 241.58409 482.57376 c
241.57389 482.89521 241.52400 483.20022 241.43499 483.48935 c
241.34655 483.82186 241.19603 484.15465 240.98570 484.48715 c
240.77509 484.82022 240.48057 485.18646 240.10356 485.58557 C
249.72265 485.58557 l
251.83106 485.58557 253.48337 485.07024 254.68186 484.03814 c
255.87950 483.00605 256.50085 481.88041 256.54564 480.66009 c
256.54564 480.63742 256.54564 480.62041 256.54564 480.60992 c
256.54564 480.59858 256.54564 480.58214 256.54564 480.55975 c
256.54564 479.31761 256.24630 478.40173 255.64734 477.81411 c
255.04809 477.22535 254.39329 476.79902 253.68293 476.53313 c
253.63871 476.51017 253.60016 476.49345 253.56699 476.48239 c
253.53354 476.47191 253.50576 476.46624 253.48337 476.46624 C
255.52517 475.71165 256.75654 474.79068 257.17861 473.70331 c
257.59928 472.61622 257.80989 471.41802 257.80989 470.10841 c
257.72202 468.04479 256.87871 466.55858 255.28110 465.64866 c
253.68293 464.73902 251.86394 464.28435 249.82214 464.28435 c
249.75581 464.28435 249.68891 464.28973 249.62230 464.30079 c
249.55625 464.31184 249.48935 464.31723 249.42302 464.31723 c
249.37909 464.31723 249.33997 464.32318 249.30595 464.33452 c
249.27279 464.34501 249.23480 464.35124 249.19002 464.35124 c
249.14523 464.35124 249.10696 464.35124 249.07380 464.35124 c
249.04035 464.35124 249.00123 464.35124 248.95729 464.35124 c
239.83767 464.35124 L
240.48057 464.55052 240.91937 464.93291 241.15181 465.49956 c
241.38539 466.06450 241.52400 466.66942 241.56765 467.31317 c
241.59033 467.44583 241.60167 467.57962 241.60167 467.71257 c
241.60167 467.84523 241.60167 467.97817 241.60167 468.11197 c
@c
316.80057 360.13096 m
316.80822 360.13550 L
320.70161 371.84740 l
320.74583 372.02513 320.80167 372.20230 320.86828 372.37946 c
320.93461 372.55776 321.00094 372.73521 321.06756 372.91294 c
321.22290 373.33389 321.36690 373.74463 321.50013 374.14403 c
321.63364 374.54315 321.69997 374.90939 321.69997 375.24246 c
321.69997 375.37597 321.68863 375.50353 321.66680 375.62485 c
321.64469 375.74759 321.61124 375.87487 321.56702 376.00753 c
321.47802 376.25216 321.32268 376.50132 321.10044 376.75701 c
320.87906 377.01213 320.57943 377.23975 320.20243 377.43902 C
328.55641 377.43902 L
335.64586 359.20006 l
335.73430 358.71137 335.96220 358.25613 336.32844 357.83490 c
336.69439 357.41339 337.08784 357.03638 337.50964 356.70331 c
337.62132 356.61430 337.72564 356.53153 337.82655 356.45414 c
337.92633 356.37619 338.03150 356.29257 338.14261 356.20413 C
327.55805 356.20413 L
327.58016 356.20413 327.59660 356.20980 327.60822 356.22113 c
327.61956 356.23162 327.63600 356.24863 327.65783 356.27074 c
327.96879 356.49298 328.25735 356.72513 328.52268 356.96948 c
328.78913 357.21383 328.97792 357.46894 329.08932 357.73512 c
329.13354 357.80173 329.16076 357.86863 329.17181 357.93496 c
329.18343 358.00129 329.18882 358.06791 329.18882 358.13480 c
329.18882 358.15663 329.18343 358.19546 329.17181 358.25074 c
329.16076 358.30687 329.15537 358.35676 329.15537 358.40041 C
329.13354 358.46787 329.11710 358.52797 329.10548 358.58381 c
329.09414 358.63937 329.07770 358.67820 329.05587 358.70031 C
327.79077 362.49534 L
321.46696 362.49534 L
320.20243 359.20006 L
320.20243 359.17682 320.19647 359.13883 320.18542 359.08356 c
320.17436 359.02772 320.16926 358.97811 320.16926 358.93332 C
320.16926 358.93332 320.16926 358.92850 320.16926 358.91688 c
320.16926 358.90554 320.16926 358.90016 320.16926 358.90016 C
320.16926 358.85537 320.16359 358.80576 320.15282 358.75049 c
320.14091 358.69465 320.13581 358.65581 320.13581 358.63342 c
320.13581 358.54526 320.14091 358.46135 320.15282 358.38397 c
320.16359 358.30687 320.18003 358.23402 320.20243 358.16797 c
320.26847 357.81250 320.43543 357.46384 320.70161 357.11915 c
320.96778 356.77502 321.30085 356.47002 321.69997 356.20413 C
316.48791 356.20413 L
314.17795 356.20413 L
302.10945 356.20413 L
302.75263 356.71436 303.16365 357.24161 303.34082 357.78529 c
303.51798 358.32869 303.60671 358.97811 303.60671 359.73184 C
303.60671 373.14539 l
303.60671 374.38781 303.44627 375.27052 303.12454 375.79153 c
302.80224 376.31254 302.39830 376.76239 301.90932 377.13969 C
301.88750 377.13969 301.87049 377.14507 301.85972 377.15584 c
301.84866 377.16746 301.84328 377.17257 301.84328 377.17257 c
311.46208 377.17257 L
310.70721 376.55178 310.26954 375.84227 310.14680 375.04290 c
310.02548 374.24353 309.96425 373.25679 309.96425 372.08069 c
309.96425 359.73184 L
310.05269 359.71030 310.14680 359.69386 310.24687 359.68224 c
310.34693 359.67118 310.45209 359.65446 310.56293 359.63235 c
310.87389 359.56630 311.22397 359.50989 311.61146 359.46595 c
312.00038 359.42117 312.39326 359.39934 312.79351 359.39934 c
312.94857 359.39934 313.10901 359.40529 313.27625 359.41606 c
313.44208 359.42712 313.61443 359.43194 313.79159 359.43194 c
314.65757 359.49883 315.46687 359.65446 316.22173 359.89880 C
316.24129 359.90504 L
316.25178 359.90872 L
316.25631 359.90986 L
316.26227 359.91156 L
316.26255 359.91213 L
316.28154 359.91836 L
316.29090 359.92148 L
316.29090 359.92148 L
316.29317 359.92290 L
316.30734 359.92772 L
316.31159 359.92828 L
316.32094 359.93254 L
316.34050 359.93849 L
316.34050 359.93934 L
316.37509 359.95124 L
316.38756 359.95606 L
316.38926 359.95606 L
316.39408 359.95833 L
316.39805 359.95946 L
316.40825 359.96315 L
316.41789 359.96655 L
316.44624 359.97732 L
316.45531 359.98072 L
316.46041 359.98243 L
316.49329 359.99518 L
316.49329 359.99518 L
316.51058 360.00227 L
316.51994 360.00595 L
316.52164 360.00652 L
316.54772 360.01757 L
316.55707 360.02069 L
316.55764 360.02126 L
316.55764 360.02183 L
316.57209 360.02721 L
316.57436 360.02920 L
316.58372 360.03203 L
316.58854 360.03402 L
316.59307 360.03628 L
316.61065 360.04365 L
316.61972 360.04819 L
316.62057 360.04819 L
316.62850 360.05159 L
316.62992 360.05187 L
316.68066 360.07427 L
316.68123 360.07455 L
316.71128 360.08844 L
316.71128 360.08844 L
316.71553 360.09071 L
316.72375 360.09411 L
316.73254 360.09808 L
316.74132 360.10261 L
316.74189 360.10261 L
316.74926 360.10658 l
316.75805 360.10998 L
316.75946 360.11140 L
316.77080 360.11679 L
316.78299 360.12246 L
316.79150 360.12614 L
316.79915 360.13096 L
316.80057 360.13096 L
@c
258.70479 467.87839 m
258.70479 481.29250 l
258.70479 482.53521 258.54406 483.41707 258.22233 483.93865 c
257.90031 484.45994 257.49524 484.90951 257.00712 485.28595 C
256.98501 485.28595 256.96857 485.29219 256.95723 485.30296 c
256.94589 485.31402 256.94022 485.31912 256.94022 485.31912 c
266.55931 485.31912 L
265.80557 484.69805 265.36677 483.98854 265.24545 483.18945 c
265.12271 482.39093 265.06176 481.40277 265.06176 480.22724 c
265.06176 467.87839 L
265.15077 467.85685 265.24545 467.84013 265.34523 467.82850 c
265.44472 467.81745 265.55017 467.80044 265.66101 467.77890 c
265.97140 467.71257 266.32091 467.65701 266.70983 467.61194 c
267.09789 467.56828 267.49191 467.54532 267.89102 467.54532 c
268.04580 467.54532 268.20765 467.55213 268.37348 467.56233 c
268.54044 467.57339 268.71137 467.57962 268.88939 467.57962 c
269.75509 467.64624 270.56466 467.80044 271.31924 468.04479 C
271.32888 468.04819 L
271.33937 468.05131 L
271.34901 468.05528 L
271.35468 468.05726 L
271.35921 468.05839 L
271.36885 468.06236 L
271.37849 468.06491 L
271.38869 468.06831 L
271.38954 468.06860 L
271.39096 468.06945 L
271.40428 468.07398 L
271.40825 468.07512 L
271.41846 468.07880 L
271.42328 468.07994 L
271.43490 468.08391 L
271.43972 468.08589 L
271.47458 468.09780 L
271.47600 468.09836 L
271.48592 468.10261 L
271.49159 468.10488 L
271.53298 468.11934 L
271.54261 468.12359 L
271.56076 468.13068 L
271.57068 468.13351 L
271.57181 468.13493 L
271.58655 468.14031 L
271.58854 468.14060 L
271.59080 468.14230 L
271.59789 468.14513 L
271.60724 468.14797 L
271.61688 468.15222 L
271.62624 468.15562 L
271.63474 468.15931 L
271.64381 468.16356 L
271.66167 468.17093 L
271.67102 468.17433 L
271.68038 468.17802 L
271.68690 468.18057 L
271.68860 468.18170 L
271.69739 468.18539 L
271.70646 468.18935 L
271.71581 468.19304 L
271.71808 468.19446 L
271.74841 468.20721 L
271.75096 468.20863 L
271.75861 468.21175 L
271.76797 468.21600 L
271.77647 468.22025 L
271.77959 468.22139 L
271.78469 468.22394 L
271.79405 468.22791 L
271.80255 468.23187 L
271.80935 468.23499 L
271.81049 468.23556 L
271.81928 468.23953 L
271.83657 468.24690 L
271.83883 468.24917 l
271.84422 468.25143 L
271.85301 468.25597 L
271.86151 468.25937 L
271.86860 468.26306 L
271.86973 468.26334 L
271.87852 468.26787 L
271.88617 468.27128 L
271.89468 468.27524 L
271.89780 468.27751 L
271.90261 468.27978 L
275.79742 479.99424 l
275.84107 480.17140 275.89691 480.34913 275.96296 480.52687 c
276.02957 480.70431 276.09619 480.88148 276.16337 481.05950 c
276.31843 481.48016 276.46214 481.89118 276.59565 482.29030 c
276.72888 482.68970 276.79493 483.05594 276.79493 483.38872 c
276.79493 483.52195 276.78416 483.64980 276.76205 483.77140 c
276.74022 483.89414 276.70706 484.02113 276.66227 484.15465 c
276.57354 484.39928 276.41849 484.64816 276.19625 484.90328 c
275.97458 485.15839 275.67496 485.38602 275.29767 485.58557 C
283.65194 485.58557 L
290.74139 467.34661 l
290.83039 466.85764 291.05745 466.40353 291.42397 465.98202 c
291.78964 465.56022 292.18365 465.18293 292.60517 464.84986 c
292.71600 464.76085 292.82173 464.67808 292.92151 464.60013 c
293.02101 464.52246 293.12702 464.43940 293.23786 464.35124 C
282.65301 464.35124 L
282.67625 464.35124 282.69269 464.35635 282.70318 464.36712 c
282.71452 464.37789 282.73096 464.39490 282.75335 464.41729 c
283.06375 464.63924 283.35231 464.87225 283.61877 465.11660 c
283.88466 465.36009 284.07288 465.61521 284.18485 465.88224 c
284.22822 465.94828 284.25657 466.01490 284.26734 466.08123 c
284.27839 466.14841 284.28491 466.21502 284.28491 466.28135 c
284.28491 466.30346 284.27839 466.34258 284.26734 466.39757 c
284.25657 466.45370 284.25118 466.50331 284.25118 466.54781 C
284.22822 466.61443 284.21178 466.67537 284.20044 466.73008 c
284.18995 466.78620 284.17351 466.82476 284.15083 466.84687 C
282.88658 470.64189 L
276.56277 470.64189 L
275.29767 467.34661 L
275.29767 467.32450 275.29200 467.28539 275.28094 467.22926 c
275.27017 467.17427 275.26394 467.12466 275.26394 467.07987 C
275.26394 467.07987 275.26394 467.07449 275.26394 467.06315 c
275.26394 467.05209 275.26394 467.04671 275.26394 467.04671 C
275.26394 467.00192 275.25912 466.95231 275.24750 466.89647 c
275.23616 466.84120 275.23106 466.80293 275.23106 466.78025 c
275.23106 466.69153 275.23616 466.60847 275.24750 466.53109 c
275.25912 466.45370 275.27584 466.38113 275.29767 466.31452 c
275.36400 465.95991 275.53096 465.61011 275.79742 465.26598 c
276.06331 464.92243 276.39638 464.61713 276.79493 464.35124 C
271.58542 464.35124 L
269.27320 464.35124 L
257.20696 464.35124 L
257.85043 464.86148 258.26060 465.38844 258.43805 465.93184 c
258.61578 466.47524 258.70479 467.12466 258.70479 467.87839 c
@c
290.99792 474.70224 m
291.10847 479.22860 292.41241 482.25742 294.90831 483.78813 c
297.40479 485.31912 300.13994 486.08504 303.11263 486.08504 c
303.29036 486.08504 303.47348 486.08504 303.66198 486.08504 c
303.85106 486.08504 304.03332 486.07398 304.21106 486.05159 c
304.85480 486.02948 305.48750 485.97987 306.10828 485.90192 c
306.72964 485.82454 307.32860 485.74148 307.90517 485.65191 c
308.01713 485.65191 308.11691 485.64680 308.20535 485.63603 c
308.29408 485.62498 308.38252 485.60825 308.47153 485.58557 C
308.47153 481.05950 L
308.33858 481.14794 308.18806 481.23666 308.02167 481.32567 c
307.85528 481.41411 307.69483 481.50340 307.53921 481.59128 c
306.94082 481.90224 306.25824 482.18570 305.49288 482.44082 c
304.72724 482.69594 303.85616 482.82350 302.88019 482.82350 c
302.67978 482.82350 l
301.08274 482.82350 299.81792 482.04709 298.88589 480.49313 c
297.95386 478.94031 297.48756 477.22110 297.48756 475.33408 c
297.48756 475.26746 297.48756 475.19518 297.48756 475.11836 c
297.48756 475.04041 297.48756 474.96784 297.48756 474.90151 c
297.57657 473.12617 298.13698 471.47868 299.16907 469.95931 c
300.20088 468.43852 301.77014 467.56828 303.87855 467.34661 c
303.92249 467.34661 303.97238 467.34661 304.02822 467.34661 c
304.08350 467.34661 304.14444 467.34661 304.21106 467.34661 C
304.25499 467.32450 304.30517 467.31317 304.36129 467.31317 c
304.41628 467.31317 304.46617 467.31317 304.51011 467.31317 c
304.86557 467.31317 305.23209 467.33499 305.60854 467.37978 c
305.98639 467.42457 306.36312 467.49061 306.74069 467.57962 c
307.40627 467.73411 308.06107 467.92318 308.70482 468.14513 c
309.34828 468.36709 309.93591 468.60009 310.46825 468.84416 c
310.64655 468.93260 310.81776 469.02161 310.98472 469.11061 c
311.15083 469.19877 311.31184 469.28835 311.46718 469.37679 C
309.96964 464.58340 L
309.25899 464.45074 308.50498 464.33452 307.70617 464.23446 c
306.90737 464.13439 306.09751 464.05106 305.27603 463.98444 c
305.00986 463.98444 304.74907 463.97934 304.49395 463.96828 c
304.23883 463.95723 303.98939 463.95156 303.74476 463.95156 c
303.67871 463.95156 303.60671 463.95156 303.52876 463.95156 c
303.45080 463.95156 303.37909 463.95156 303.31247 463.95156 c
300.40611 464.01817 297.70980 464.78863 295.22466 466.26491 c
292.73953 467.73978 291.33014 470.55260 290.99792 474.70224 c
@c
312.49956 481.79169 m
312.49956 482.56838 312.36661 483.22828 312.09987 483.77140 c
311.83342 484.31537 311.37931 484.83156 310.73499 485.31912 C
320.08847 485.31912 L
319.97707 485.23068 319.87701 485.15329 319.78857 485.08696 c
319.69984 485.02006 319.61112 484.94239 319.52211 484.85339 c
319.21115 484.58750 318.97899 484.28759 318.82309 483.95480 c
318.66803 483.62202 318.59065 483.15657 318.59065 482.55732 c
318.59065 475.96677 L
323.38318 482.32346 l
323.53795 482.50120 323.64907 482.68488 323.71540 482.87310 c
323.78230 483.06189 323.81631 483.23395 323.81631 483.38872 c
323.81631 483.56674 323.76047 483.75496 323.64907 483.95480 c
323.53795 484.15465 323.39395 484.35420 323.21650 484.55348 c
323.10539 484.68728 322.97783 484.81483 322.83383 484.93616 c
322.68983 485.05890 322.52910 485.18646 322.35165 485.31912 C
330.97153 485.31912 L
323.61591 476.73213 L
329.47398 467.87839 l
329.56328 467.72306 329.65682 467.56828 329.75717 467.41294 c
329.85666 467.25761 329.95106 467.10170 330.03978 466.94665 c
330.37228 466.43641 330.72265 465.94828 331.08803 465.48255 c
331.45427 465.01597 331.83694 464.63924 332.23635 464.35124 C
327.44353 464.35124 l
326.53361 464.35124 325.76287 464.42835 325.13017 464.58340 c
324.49805 464.73902 323.89370 465.13843 323.31657 465.78189 c
323.16151 465.95991 322.99994 466.15918 322.83383 466.38113 c
322.66800 466.60280 322.50614 466.84687 322.35165 467.11332 c
318.59065 473.43713 L
318.59065 467.34661 l
318.59065 466.63625 318.73493 466.03729 319.02321 465.54917 c
319.31150 465.06047 319.63323 464.68375 319.98784 464.41729 c
320.01080 464.39490 320.02696 464.37789 320.03773 464.36712 c
320.04935 464.35635 320.06551 464.35124 320.08847 464.35124 C
310.73499 464.35124 L
311.17918 464.52841 311.53380 464.84476 311.80025 465.29915 c
312.06728 465.75468 312.25493 466.22580 312.36661 466.71364 c
312.41083 466.91376 312.44372 467.11332 312.46611 467.31317 c
312.48822 467.51272 312.49956 467.70094 312.49956 467.87839 c
312.49956 481.79169 l
@c
290.01770 373.41156 m
290.01770 374.41077 289.90091 375.23707 289.66819 375.89187 c
289.43490 376.54611 289.13017 377.06202 288.75288 377.43902 C
295.77572 377.43902 l
296.08668 377.43902 296.49742 377.43902 297.00765 377.43902 c
297.51789 377.43902 298.05024 377.45036 298.60469 377.47247 c
299.22661 377.47247 299.81934 377.48891 300.38570 377.52265 c
300.95178 377.55524 301.36706 377.60542 301.63323 377.67231 C
301.63323 372.91294 L
301.61169 372.93449 301.59524 372.95121 301.58334 372.96283 c
301.57228 372.97361 301.55556 372.99061 301.53373 373.01244 c
301.48980 373.05723 301.45096 373.09521 301.41694 373.12923 c
301.38435 373.16211 301.34494 373.20123 301.30016 373.24602 c
300.99033 373.55584 300.63543 373.82740 300.23603 374.06126 c
299.83635 374.29455 299.20450 374.41077 298.33824 374.41077 c
296.27518 374.41077 L
296.27518 369.08476 L
297.60661 369.08476 l
297.98362 369.08476 298.36120 369.09581 298.73792 369.11820 c
299.11493 369.14031 299.49250 369.20693 299.86951 369.31805 C
299.86951 364.55839 L
299.80318 364.62529 299.73685 364.69191 299.66995 364.75824 c
299.60334 364.82457 299.53701 364.90252 299.47039 364.99068 c
299.29209 365.19080 299.09282 365.37959 298.87172 365.55732 c
298.64920 365.73449 298.39408 365.82350 298.10608 365.82350 c
296.27518 365.82350 L
296.27518 359.73184 l
296.27518 359.50989 296.30296 359.26639 296.35852 358.99937 c
296.41351 358.73320 296.48608 358.46787 296.57480 358.20113 c
296.72929 357.80173 296.92998 357.42387 297.17348 357.06954 c
297.41754 356.71436 297.72850 356.42636 298.10608 356.20413 C
288.75288 356.20413 L
288.75288 356.20413 288.75883 356.20980 288.76961 356.22113 c
288.78066 356.23162 288.78576 356.24863 288.78576 356.27074 C
288.85238 356.35918 288.91928 356.44819 288.98617 356.53663 c
289.05222 356.62564 289.11855 356.71436 289.18517 356.80280 c
289.38529 357.11405 289.57436 357.49049 289.75153 357.93496 c
289.92869 358.37830 290.01770 358.97811 290.01770 359.73184 c
290.01770 373.41156 l
@c
335.54183 366.55569 m
335.67477 370.32746 336.68986 373.03427 338.58709 374.67694 c
340.48431 376.31877 342.56466 377.33924 344.82813 377.73893 c
345.33836 377.82794 345.84860 377.89455 346.35883 377.93820 c
346.86907 377.98271 347.36825 378.00539 347.85666 378.00539 c
348.74476 378.00539 349.60422 377.94926 350.43619 377.83871 c
351.26787 377.72759 351.96180 377.59436 352.51625 377.43902 C
352.51625 372.64620 L
352.11713 372.97928 351.69562 373.26756 351.25143 373.51191 c
350.80724 373.75625 350.36362 373.95496 349.92057 374.11087 c
349.52088 374.26649 349.12091 374.37704 348.72180 374.44394 c
348.32239 374.50998 347.93433 374.54315 347.55704 374.54315 c
346.04816 374.54315 344.70539 373.98331 343.52957 372.86306 c
342.35320 371.74167 341.76529 370.16079 341.76529 368.11984 c
341.76529 368.09773 341.77124 368.07534 341.78202 368.05294 c
341.79307 368.03055 341.79931 368.00901 341.79931 367.98661 c
341.79931 367.96394 341.80469 367.94239 341.81575 367.91972 c
341.82709 367.89817 341.83191 367.86444 341.83191 367.82022 c
341.83191 367.35420 341.86592 366.79436 341.93225 366.13899 c
341.99858 365.48419 342.13181 364.80302 342.33137 364.09238 c
342.66444 362.89417 343.22457 361.79008 344.01231 360.78066 c
344.80006 359.77124 345.95972 359.26639 347.49043 359.26639 c
347.62337 359.26639 347.76765 359.27773 347.92271 359.29956 c
348.07861 359.32139 348.24529 359.35455 348.42246 359.39934 c
348.44457 359.39934 348.46668 359.39934 348.48964 359.39934 c
348.51090 359.39934 348.53272 359.39934 348.55569 359.39934 C
348.59962 359.42117 348.65546 359.43874 348.72180 359.44894 c
348.78813 359.46000 348.85474 359.46595 348.92192 359.46595 C
348.92192 363.99260 l
348.92192 364.88041 348.85474 365.55109 348.72180 366.00605 c
348.58885 366.46129 348.34450 366.87742 347.99017 367.25471 C
347.99017 367.25471 347.98422 367.26009 347.97288 367.27115 c
347.96183 367.28192 347.94510 367.29836 347.92271 367.32132 C
354.51326 367.32132 L
354.51326 356.70331 L
354.09146 356.57065 353.66995 356.45414 353.24816 356.35380 c
352.82665 356.25373 352.40513 356.18202 351.98334 356.13694 c
351.34072 356.02639 350.70265 355.94334 350.06995 355.88806 c
349.43754 355.83222 348.82214 355.80444 348.22261 355.80444 c
344.71701 355.80444 341.72674 356.74214 339.25266 358.61669 c
336.77830 360.49238 335.54183 363.13795 335.54183 366.55569 c
@c
236.90721 385.45597 m
265.00139 385.45597 L
265.00139 461.52595 L
236.90721 461.52595 L
236.90721 385.45597 L
@c
267.91002 380.14356 m
296.00306 380.14356 L
296.00306 456.21354 L
267.91002 456.21354 L
267.91002 380.14356 L
@c
299.63225 385.45597 m
327.72586 385.45597 L
327.72586 461.52595 L
299.63225 461.52595 L
299.63225 385.45597 L
@c
330.27364 380.14356 m
358.36781 380.14356 L
358.36781 456.21354 L
330.27364 456.21354 L
330.27364 380.14356 L
@c
322.46532 365.82350 m
326.52624 365.82350 L
324.26277 372.08069 L
322.46532 365.82350 L
@c
277.56085 473.96948 m
281.62120 473.96948 L
279.35830 480.22724 L
277.56085 473.96948 L
@c
247.62586 467.87839 m
247.91414 467.74573 248.19137 467.63490 248.45783 467.54532 c
248.72428 467.45745 248.96806 467.41294 249.19002 467.41294 c
249.98854 467.41294 250.62633 467.71767 251.10340 468.32769 c
251.58076 468.93855 251.86394 469.62085 251.95209 470.37543 c
251.95209 470.94066 l
251.95209 471.85030 251.67515 472.67717 251.12013 473.42013 c
250.56595 474.16394 249.70025 474.53528 248.52387 474.53528 c
248.45783 474.53528 248.38583 474.53017 248.30816 474.51855 c
248.23106 474.50750 248.15792 474.50211 248.09159 474.50211 c
248.00287 474.50211 247.91924 474.49701 247.84129 474.48567 c
247.76419 474.47490 247.69247 474.46894 247.62586 474.46894 C
247.62586 467.87839 L
@c
247.62586 477.46431 m
247.67036 477.44249 247.72025 477.42605 247.77524 477.41471 c
247.83052 477.40309 247.89175 477.38721 247.95808 477.36510 C
248.00287 477.36510 248.05304 477.35943 248.10831 477.34866 c
248.16359 477.33676 248.21376 477.33137 248.25827 477.33137 c
248.85694 477.33137 249.31757 477.57543 249.63874 478.06384 c
249.96076 478.55140 250.15521 479.08488 250.22211 479.66117 c
250.22211 479.72750 250.22211 479.78872 250.22211 479.84428 c
250.22211 479.89984 250.22211 479.94945 250.22211 479.99424 c
250.22211 480.36047 l
250.22211 480.38173 250.22211 480.41008 250.22211 480.44324 c
250.22211 480.47698 250.22211 480.50447 250.22211 480.52687 c
250.17732 481.03710 249.96076 481.50340 249.57269 481.92435 c
249.18435 482.34614 248.66844 482.55732 248.02554 482.55732 c
247.62586 482.55732 L
247.62586 477.46431 L
@c
F

@rax %Note: Object
215.56120 337.56548 390.13682 503.67288 @E
/$fm 0 def
215.56120 503.67288 m
390.13682 503.67288 L
390.13682 337.56548 L
215.56120 337.56548 L
215.56120 503.67288 L
@c
N

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
